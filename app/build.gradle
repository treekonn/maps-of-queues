apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "by.treekonn.moq"
        minSdkVersion min_sdk_version
        targetSdkVersion compile_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

//    buildTypes.each {
//        Properties properties = new Properties()
//        properties.load(project.rootProject.file("local.properties").newDataInputStream())
//        def tmdbApiKey = properties.getProperty("tmdb_api_key", "")
//        it.buildConfigField 'String', "TMDB_API_KEY", tmdbApiKey
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions.preDexLibraries true // TODO question what it is?
    viewBinding.enabled = true
//    viewBinding {
//        enabled = true
//    }
    // TODO test compileOptions.sourceCompatibility
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // TODO also
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // Kotlin
    implementation libs.kotlin_std
    implementation libs.core_ktx

    implementation libs.app_compat
    implementation libs.material_views
    implementation libs.constraintlayout

    // ktx libraries https://developer.android.com/kotlin/ktx
//    implementation libs.activity_ktx
//    implementation libs.fragment_ktx
//    implementation libs.livedata_ktx

    // Retrofit
    implementation libs.retrofit
    implementation libs.retrofit_moshi
    // TODO remove from release
    // debug build
    implementation libs.okhttp_logging

    // Glide
    implementation libs.glide
    kapt libs.glide_compiler

    // Test
    testImplementation libs.junit_ext
    androidTestImplementation libs.junit
    androidTestImplementation libs.espresso

//    def retrofit2_version = "2.5.0"
//    def okhttp3_version = "3.12.0"
//    def kotlinCoroutineVersion = "1.0.1"
//    def picassoVersion = "2.71828"
//    //Retrofit2
//    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
//    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
//
//    //Okhttp3
//    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
//    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
//
//    //Picasso for Image Loading
//    implementation("com.squareup.picasso:picasso:$picassoVersion") {
//        exclude group: "com.android.support"
//    }
//
//    //Kotlin Coroutines
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"
//
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'


}
